<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dijkstra's Algorithm in Water Distribution</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>Dijkstra's Algorithm in Water Distribution</h1>
    </header>
    <nav>
        <ul>
            <li><a href="#introduction">Introduction</a></li>
            <li><a href="#features">Key Features</a></li>
            <li><a href="#applications">Applications</a></li>
            <li><a href="#how-it-works">How It Works</a></li>
        </ul>
    </nav>
    <section id="introduction">
        <h2>Introduction</h2>
        <p>Dijkstra's Algorithm is a graph-based algorithm used to find the shortest path from a source node to all other nodes in a weighted graph. It is widely applied in various fields, including network routing, urban planning, and water distribution systems, where efficiency is crucial.</p>
    </section>
    <section id="features">
        <h2>Key Features</h2>
        <ul>
            <li>Efficiently finds the shortest path in a weighted graph.</li>
            <li>Minimizes energy consumption in water distribution systems.</li>
            <li>Ensures faster delivery of water during peak demand.</li>
            <li>Applicable to real-time scenarios for dynamic path adjustments.</li>
        </ul>
    </section>
    <section id="applications">
        <h2>Applications</h2>
        <p>Dijkstra's Algorithm has a wide range of applications, such as:</p>
        <ul>
            <li>Urban water distribution optimization.</li>
            <li>Network routing in computer networks.</li>
            <li>GPS navigation systems to find the shortest route.</li>
            <li>Telecommunication and power grid optimization.</li>
        </ul>
    </section>
    <section id="how-it-works">
        <h2>How It Works</h2>
        <p>The algorithm works by maintaining a set of nodes whose shortest distance from the source is known and repeatedly expanding this set by adding the nearest node. Steps involved:</p>
        <ol>
            <li>Initialize the distance of the source node to zero and all other nodes to infinity.</li>
            <li>Select the node with the smallest distance and mark it as processed.</li>
            <li>Update the distances of its neighbors if a shorter path is found.</li>
            <li>Repeat until all nodes have been processed.</li>
        </ol>
    </section>
    <footer>
        <p>&copy; 2025 Dijkstra's Algorithm Project | Water Distribution Optimization</p>
    </footer>
</body>
</html>
